# s.set.colors
# Define some colors with tput
function s.set.colors() {
	s.check.requirements? "tput"
	if ! s.check.variable? "TERM"; then
		return 0
	fi
	s_color_underline=$(tput -T vt100 sgr 0 1)
	s_color_bold=$'\x1b[97m'
	s_color_purple=$'\x1b[95m'
	s_color_red=$'\x1b[31m'
	s_color_green=$'\x1b[92m'
	s_color_yellow=$'\x1b[93m'
	s_color_blue=$'\x1b[94m'
	s_color_reset=$'\x1b[0m'
}

function s.set.emojis() {
	s_emoji_debug=":book:"
	s_emoji_info=":large_blue_diamond:"
	s_emoji_notice=":large_orange_diamond:"
	s_emoji_warn=":warning:"
	s_emoji_error=":x:"
}

# s.set.variables
# Define some standard variables that can be overwritten with a yaml file
function s.set.variables() {
	s.check.requirements? "basename"
	s_scriptname=$(basename $s_sourced_script)
	s_tmpdir=/tmp/${s_scriptname}.$$
	s_stdout=$s_tmpdir/stdout
	s_stderr=$s_tmpdir/stderr
	if s.check.directory? "/var/run"; then
		if s.check.writable? "/var/run"; then
			s_rundir=/var/run
		fi
	fi
	if ! s.check.variable? "$s_rundir"; then
		if mkdir -p ~/.smack > /dev/null 2>&1; then
			s_rundir=~/.smack
		else
			exit 2
		fi
	else
		exit 2
	fi
	if ! s.check.variable? "$s_config_debug"; then
		s_config_debug="yes"
	fi
	if ! s.check.variable? "$s_config_syslog_facility"; then
		s_config_syslog_facility="local5"
	fi
	# Array with current database compatibility
	s_db_types=(mysql)
}

# s.set.verbose
# The same as bash -x 
function s.set.verbose() {
	set -x
}
